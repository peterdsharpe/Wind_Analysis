function [fitresult, gof] = createFit(lats_scaled, alts_scaled, speeds_scaled, weights)
%CREATEFIT(LATS_SCALED,ALTS_SCALED,SPEEDS_SCALED,WEIGHTS)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : lats_scaled
%      Y Input : alts_scaled
%      Z Output: speeds_scaled
%      Weights : weights
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Feb-2020 22:04:26


%% Fit: 'untitled fit 1'.
[xData, yData, zData, weights_1] = prepareSurfaceData( lats_scaled, alts_scaled, speeds_scaled, weights );

% Set up fittype and options.
ft = fittype( 'c0 + cql * (l-lqc)^2 + cqa * (a-aqc)^2 + cqla * a * l + cg * exp(-(abs(l-lgc)^lgh/(2*lgs^2)+abs(a-agc)^agh/(2*ags^2)+cgc*a*l)) + c4a * (a-c4c)^4 + c12 * l * a^2 +c21 * l^2 * a', 'independent', {'l', 'a'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.Display = 'Off';
opts.StartPoint = [-0.55 2 0.14 -1 -0.5 0.5 0 -0.26 1 1 0 0.2 0 -0.1 0.9 2 1 6];
opts.Weights = weights_1;

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, [xData, yData], zData );
legend( h, 'untitled fit 1', 'speeds_scaled vs. lats_scaled, alts_scaled with weights', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'lats_scaled', 'Interpreter', 'none' );
ylabel( 'alts_scaled', 'Interpreter', 'none' );
zlabel( 'speeds_scaled', 'Interpreter', 'none' );
grid on
view( -53.9, 47.3 );


